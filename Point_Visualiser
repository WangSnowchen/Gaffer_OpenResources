import Gaffer
import GafferOSL
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["Point_Visualiser"] = Gaffer.Box( "Point_Visualiser" )
parent.addChild( __children["Point_Visualiser"] )
__children["Point_Visualiser"].addChild( GafferOSL.OSLObject( "OSLObject" ) )
__children["Point_Visualiser"]["OSLObject"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "", GafferOSL.ClosurePlug( "value", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "legacyClosure", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Point_Visualiser"]["OSLObject"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "Cs", Gaffer.Color3fPlug( "value", defaultValue = imath.Color3f( 0, 0, 0 ), ), True, "primitiveVariable", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Point_Visualiser"]["OSLObject"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Point_Visualiser"].addChild( GafferOSL.OSLCode( "OSLCode" ) )
__children["Point_Visualiser"]["OSLCode"]["parameters"].addChild( Gaffer.IntPlug( "vertexIndex", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Point_Visualiser"]["OSLCode"]["out"].addChild( Gaffer.IntPlug( "deletePoints", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Point_Visualiser"]["OSLCode"]["out"].addChild( Gaffer.Color3fPlug( "preview", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Point_Visualiser"]["OSLCode"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Point_Visualiser"].addChild( GafferOSL.OSLShader( "OutInt" ) )
__children["Point_Visualiser"]["OutInt"].loadShader( "ObjectProcessing/OutInt" )
__children["Point_Visualiser"]["OutInt"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Point_Visualiser"].addChild( GafferScene.PathFilter( "PathFilter" ) )
__children["Point_Visualiser"]["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Point_Visualiser"].addChild( GafferScene.MeshToPoints( "MeshToPoints" ) )
__children["Point_Visualiser"]["MeshToPoints"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Point_Visualiser"].addChild( GafferScene.DeletePoints( "DeletePoints" ) )
__children["Point_Visualiser"]["DeletePoints"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Point_Visualiser"].addChild( GafferScene.OpenGLAttributes( "OpenGLAttributes" ) )
__children["Point_Visualiser"]["OpenGLAttributes"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Point_Visualiser"].addChild( GafferScene.Parent( "Parent" ) )
__children["Point_Visualiser"]["Parent"]["children"].addChild( GafferScene.ScenePlug( "child1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Point_Visualiser"]["Parent"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Point_Visualiser"].addChild( Gaffer.Dot( "Dot" ) )
__children["Point_Visualiser"]["Dot"].setup( GafferScene.ScenePlug( "in", ) )
__children["Point_Visualiser"]["Dot"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Point_Visualiser"].addChild( Gaffer.Dot( "Dot1" ) )
__children["Point_Visualiser"]["Dot1"].setup( GafferScene.ScenePlug( "in", ) )
__children["Point_Visualiser"]["Dot1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Point_Visualiser"].addChild( Gaffer.BoxIn( "BoxIn" ) )
__children["Point_Visualiser"]["BoxIn"].setup( GafferScene.ScenePlug( "out", ) )
__children["Point_Visualiser"]["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Point_Visualiser"].addChild( GafferScene.ScenePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Point_Visualiser"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["Point_Visualiser"]["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["Point_Visualiser"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Point_Visualiser"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Point_Visualiser"].addChild( Gaffer.StringVectorDataPlug( "paths", defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Point_Visualiser"].addChild( Gaffer.BoxIn( "BoxIn1" ) )
__children["Point_Visualiser"]["BoxIn1"].setup( Gaffer.IntPlug( "out", defaultValue = 0, ) )
__children["Point_Visualiser"]["BoxIn1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Point_Visualiser"].addChild( Gaffer.IntPlug( "parameters_vertexIndex", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Point_Visualiser"].addChild( Gaffer.Dot( "Dot2" ) )
__children["Point_Visualiser"]["Dot2"].setup( GafferScene.ScenePlug( "in", ) )
__children["Point_Visualiser"]["Dot2"].addChild( Gaffer.BoolPlug( "__uiInputConnectionsMinimised", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Point_Visualiser"]["Dot2"].addChild( Gaffer.BoolPlug( "__uiOutputConnectionsMinimised", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Point_Visualiser"]["Dot2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Point_Visualiser"].addChild( Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Point_Visualiser"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"], 'documentation:url', '' )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"], 'description', 'A container for "subgraphs" - node networks which exist inside the\nBox and can be exposed by promoting selected internal plugs onto the\noutside of the Box.\n\nBoxes can be used as an organisational tool for simplifying large\ngraphs by collapsing them into sections which perform distinct tasks.\nThey are also used for authoring files to be used with the Reference\nnode.' )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"], 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"], 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"], 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"], 'noduleLayout:customGadget:addButtonRight:visible', False )
__children["Point_Visualiser"]["OSLObject"]["in"].setInput( __children["Point_Visualiser"]["MeshToPoints"]["out"] )
__children["Point_Visualiser"]["OSLObject"]["filter"].setInput( __children["Point_Visualiser"]["PathFilter"]["out"] )
__children["Point_Visualiser"]["OSLObject"]["primitiveVariables"]["legacyClosure"]["value"].setInput( __children["Point_Visualiser"]["OutInt"]["out"]["primitiveVariable"] )
__children["Point_Visualiser"]["OSLObject"]["primitiveVariables"]["primitiveVariable"]["value"].setInput( __children["Point_Visualiser"]["OSLCode"]["out"]["preview"] )
__children["Point_Visualiser"]["OSLObject"]["__uiPosition"].setValue( imath.V2f( 9.07680607, 6.18270683 ) )
__children["Point_Visualiser"]["OSLCode"]["parameters"]["vertexIndex"].setInput( __children["Point_Visualiser"]["BoxIn1"]["out"] )
__children["Point_Visualiser"]["OSLCode"]["code"].setValue( 'int shadingIndex;\ngetattribute( "shading:index", shadingIndex );\ndeletePoints = shadingIndex != vertexIndex;\npreview = color((shadingIndex != vertexIndex),0,1)' )
__children["Point_Visualiser"]["OSLCode"]["__uiPosition"].setValue( imath.V2f( -17.1932602, 6.78270721 ) )
__children["Point_Visualiser"]["OutInt"]["parameters"]["name"].setValue( 'deletePoints' )
__children["Point_Visualiser"]["OutInt"]["parameters"]["value"].setInput( __children["Point_Visualiser"]["OSLCode"]["out"]["deletePoints"] )
__children["Point_Visualiser"]["OutInt"]["__uiPosition"].setValue( imath.V2f( -5.96645355, 11.9095831 ) )
__children["Point_Visualiser"]["PathFilter"]["paths"].setInput( __children["Point_Visualiser"]["paths"] )
__children["Point_Visualiser"]["PathFilter"]["__uiPosition"].setValue( imath.V2f( 35.5104561, 12.0771294 ) )
__children["Point_Visualiser"]["MeshToPoints"]["in"].setInput( __children["Point_Visualiser"]["Dot"]["out"] )
__children["Point_Visualiser"]["MeshToPoints"]["filter"].setInput( __children["Point_Visualiser"]["PathFilter"]["out"] )
__children["Point_Visualiser"]["MeshToPoints"]["adjustBounds"].setValue( False )
__children["Point_Visualiser"]["MeshToPoints"]["__uiPosition"].setValue( imath.V2f( 9.07680607, 19.9848003 ) )
__children["Point_Visualiser"]["DeletePoints"]["in"].setInput( __children["Point_Visualiser"]["OSLObject"]["out"] )
__children["Point_Visualiser"]["DeletePoints"]["filter"].setInput( __children["Point_Visualiser"]["PathFilter"]["out"] )
__children["Point_Visualiser"]["DeletePoints"]["adjustBounds"].setValue( False )
__children["Point_Visualiser"]["DeletePoints"]["__uiPosition"].setValue( imath.V2f( 9.07680607, -2.29932451 ) )
__children["Point_Visualiser"]["OpenGLAttributes"]["in"].setInput( __children["Point_Visualiser"]["DeletePoints"]["out"] )
__children["Point_Visualiser"]["OpenGLAttributes"]["filter"].setInput( __children["Point_Visualiser"]["PathFilter"]["out"] )
__children["Point_Visualiser"]["OpenGLAttributes"]["attributes"]["pointsPrimitiveGLPointWidth"]["value"].setValue( 60.0 )
__children["Point_Visualiser"]["OpenGLAttributes"]["attributes"]["pointsPrimitiveGLPointWidth"]["enabled"].setValue( True )
__children["Point_Visualiser"]["OpenGLAttributes"]["__uiPosition"].setValue( imath.V2f( 9.07680607, -10.4633865 ) )
__children["Point_Visualiser"]["Parent"]["in"].setInput( __children["Point_Visualiser"]["Dot1"]["out"] )
__children["Point_Visualiser"]["Parent"]["parent"].setValue( '/' )
__children["Point_Visualiser"]["Parent"]["children"][0].setInput( __children["Point_Visualiser"]["OpenGLAttributes"]["out"] )
__children["Point_Visualiser"]["Parent"]["__uiPosition"].setValue( imath.V2f( -4.51679993, -18.627449 ) )
__children["Point_Visualiser"]["Dot"]["in"].setInput( __children["Point_Visualiser"]["BoxIn"]["out"] )
__children["Point_Visualiser"]["Dot"]["__uiPosition"].setValue( imath.V2f( 9.07680511, 27.3168316 ) )
__children["Point_Visualiser"]["Dot1"]["in"].setInput( __children["Point_Visualiser"]["Dot"]["out"] )
__children["Point_Visualiser"]["Dot1"]["__uiPosition"].setValue( imath.V2f( -6.76679993, 20.8168316 ) )
__children["Point_Visualiser"]["BoxIn"]["__in"].setInput( __children["Point_Visualiser"]["in"] )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["BoxIn"]["__in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["BoxIn"]["__in"], 'plugValueWidget:type', '' )
__children["Point_Visualiser"]["BoxIn"]["__uiPosition"].setValue( imath.V2f( 9.07610035, 34.8168335 ) )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["in"], 'plugValueWidget:type', '' )
__children["Point_Visualiser"]["BoxOut"]["in"].setInput( __children["Point_Visualiser"]["Parent"]["out"] )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["BoxOut"]["__out"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["Point_Visualiser"]["BoxOut"]["passThrough"].setInput( __children["Point_Visualiser"]["Dot2"]["out"] )
__children["Point_Visualiser"]["BoxOut"]["enabled"].setInput( __children["Point_Visualiser"]["enabled"] )
__children["Point_Visualiser"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( -3.01752687, -26.9594803 ) )
__children["Point_Visualiser"]["out"].setInput( __children["Point_Visualiser"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["out"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["paths"], 'description', "The list of paths to the locations to be matched by the filter.\nA path is formed by a sequence of names separated by `/`, and\nspecifies the hierarchical position of a location within the scene.\nPaths may use Gaffer's standard wildcard characters to match\nmultiple locations.\n\nThe `*` wildcard matches any sequence of characters within\nan individual name, but never matches across names separated\nby a `/`.\n\n - `/robot/*Arm` matches `/robot/leftArm`, `/robot/rightArm` and\n   `/robot/Arm`. But does not match `/robot/limbs/leftArm` or\n   `/robot/arm`.\n\nThe `...` wildcard matches any sequence of names, and can be\nused to match locations no matter where they are parented in\nthe hierarchy.\n\n - `/.../house` matches `/house`, `/street/house` and `/city/street/house`." )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["paths"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["paths"], 'ui:scene:acceptsPaths', True )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["paths"], 'vectorDataPlugValueWidget:dragPointer', 'objects' )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["paths"], 'plugValueWidget:type', 'GafferSceneUI.PathFilterUI._PathsPlugValueWidget' )
__children["Point_Visualiser"]["BoxIn1"]["name"].setValue( 'parameters_vertexIndex' )
__children["Point_Visualiser"]["BoxIn1"]["__in"].setInput( __children["Point_Visualiser"]["parameters_vertexIndex"] )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["BoxIn1"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["BoxIn1"]["__in"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["BoxIn1"]["__in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["BoxIn1"]["__in"], 'label', 'vertexIndex' )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["BoxIn1"]["__in"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["BoxIn1"]["__in"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["BoxIn1"]["__in"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["BoxIn1"]["__in"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["BoxIn1"]["__in"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["BoxIn1"]["__in"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["BoxIn1"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["BoxIn1"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["BoxIn1"]["out"], 'noduleLayout:section', 'right' )
__children["Point_Visualiser"]["BoxIn1"]["__uiPosition"].setValue( imath.V2f( -34.4305458, 6.78202248 ) )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["parameters_vertexIndex"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["parameters_vertexIndex"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["parameters_vertexIndex"], 'description', '' )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["parameters_vertexIndex"], 'label', 'vertexIndex' )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["parameters_vertexIndex"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["parameters_vertexIndex"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["parameters_vertexIndex"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["parameters_vertexIndex"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["parameters_vertexIndex"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["parameters_vertexIndex"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["parameters_vertexIndex"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["Point_Visualiser"]["parameters_vertexIndex"], 'deletable', True )
__children["Point_Visualiser"]["Dot2"]["in"].setInput( __children["Point_Visualiser"]["BoxIn"]["out"] )
__children["Point_Visualiser"]["Dot2"]["__uiInputConnectionsMinimised"].setValue( True )
__children["Point_Visualiser"]["Dot2"]["__uiPosition"].setValue( imath.V2f( 4.23320007, -19.4588566 ) )
__children["Point_Visualiser"]["__uiPosition"].setValue( imath.V2f( -35.6561508, -37.7811584 ) )


del __children

