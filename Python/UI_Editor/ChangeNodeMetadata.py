###
#Modify the Metadata property of the node
###

import Gaffer
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["NodeMetadata"] = Gaffer.Node( "NodeMetadata" )
parent.addChild( __children["NodeMetadata"] )
__children["NodeMetadata"]["user"].addChild( Gaffer.BoolPlug( "Set_connections_color", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["NodeMetadata"]["user"].addChild( Gaffer.Color3fPlug( "connectionsColor", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["NodeMetadata"]["user"].addChild( Gaffer.Color3fPlug( "nodeColor", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["NodeMetadata"]["user"].addChild( Gaffer.BoolPlug( "Set_node_color", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["NodeMetadata"]["user"].addChild( Gaffer.BoolPlug( "ADD", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["NodeMetadata"]["user"].addChild( Gaffer.Color3fPlug( "Annotate_Color", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["NodeMetadata"]["user"].addChild( Gaffer.StringPlug( "Annotate_str", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["NodeMetadata"]["user"].addChild( Gaffer.BoolPlug( "REMOVE", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["NodeMetadata"]["user"].addChild( Gaffer.StringPlug( "Type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["NodeMetadata"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
Gaffer.Metadata.registerValue( __children["NodeMetadata"], 'description', 'A container for plugs.' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"], 'nodeGadget:color', imath.Color3f( 0.660000026, 0.211199999, 0.211199999 ) )
Gaffer.Metadata.registerValue( __children["NodeMetadata"], 'icon', '' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"], 'documentation:url', '' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"], 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"], 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"], 'layout:section:Switch Preview Mode:summary', '' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"], 'layout:section:Change Node Color:summary', '' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"], 'layout:section:Add Node Annotate:summary', '' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["Set_connections_color"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["Set_connections_color"], 'layout:section', 'Change Node Color' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["Set_connections_color"], 'plugValueWidget:type', 'GafferUI.ButtonPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["Set_connections_color"], 'divider', False )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["Set_connections_color"], 'layout:accessory', True )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["Set_connections_color"], 'description', '' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["Set_connections_color"], 'buttonPlugValueWidget:clicked', 'import imath\n\nroot = plug.node().scriptNode()\ncolorValue = root[\'NodeMetadata\'][\'user\'][\'connectionsColor\'].getValue()\nfor node in root.selection():\n\tnodeName = node.getChild(\'in\')\n\tGaffer.Metadata.registerValue( nodeName, "connectionGadget:color", imath.Color3f(colorValue[0], colorValue[1], colorValue[2]) )\n' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["Set_connections_color"], 'layout:index', 1 )
__children["NodeMetadata"]["user"]["connectionsColor"].setValue( imath.Color3f( 1, 0, 1 ) )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["connectionsColor"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["connectionsColor"], 'layout:section', 'Change Node Color' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["connectionsColor"], 'layout:index', 0 )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["connectionsColor"], 'description', '' )
__children["NodeMetadata"]["user"]["nodeColor"].setValue( imath.Color3f( 1, 0, 0 ) )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["nodeColor"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["nodeColor"], 'layout:section', 'Change Node Color' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["nodeColor"], 'layout:index', 2 )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["Set_node_color"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["Set_node_color"], 'layout:section', 'Change Node Color' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["Set_node_color"], 'plugValueWidget:type', 'GafferUI.ButtonPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["Set_node_color"], 'layout:accessory', True )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["Set_node_color"], 'description', '' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["Set_node_color"], 'buttonPlugValueWidget:clicked', 'import imath\n\nroot = plug.node().scriptNode()\ncolorValue = root[\'NodeMetadata\'][\'user\'][\'nodeColor\'].getValue()\nnodeName = root.selection()\nfor node in nodeName:\n\tGaffer.Metadata.registerValue( node, "nodeGadget:color", imath.Color3f(colorValue[0], colorValue[1], colorValue[2]) )\n' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["Set_node_color"], 'layout:index', 3 )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["ADD"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["ADD"], 'layout:section', 'Add Node Annotate' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["ADD"], 'plugValueWidget:type', 'GafferUI.ButtonPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["ADD"], 'layout:index', 7 )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["ADD"], 'buttonPlugValueWidget:clicked', "import imath\nroot = plug.node().scriptNode()\n\n\n\nstdName = root['NodeMetadata']['user']['Type'].getValue()\nAnnotateStr = root['NodeMetadata']['user']['Annotate_str'].getValue()\ncolorValue = root['NodeMetadata']['user']['Annotate_Color'].getValue()\nnodeName = root.selection()\n\n\n\nfor node in nodeName:\n\tGaffer.MetadataAlgo.addAnnotation( node, stdName, Gaffer.MetadataAlgo.Annotation( AnnotateStr, imath.Color3f(colorValue[0], colorValue[1], colorValue[2]) ) )" )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["ADD"], 'description', '' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["Annotate_Color"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["Annotate_Color"], 'layout:section', 'Add Node Annotate' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["Annotate_Color"], 'layout:index', 4 )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["Annotate_Color"], 'description', '' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["Annotate_str"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["Annotate_str"], 'layout:section', 'Add Node Annotate' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["Annotate_str"], 'layout:index', 5 )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["Annotate_str"], 'description', '' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["REMOVE"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["REMOVE"], 'layout:section', 'Add Node Annotate' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["REMOVE"], 'plugValueWidget:type', 'GafferUI.ButtonPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["REMOVE"], 'layout:index', 8 )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["REMOVE"], 'buttonPlugValueWidget:clicked', "root = plug.node().scriptNode()\nnodeName = root.selection()\nstdName = root['NodeMetadata']['user']['Type'].getValue()\n\n\nfor node in nodeName:\n\tGaffer.MetadataAlgo.removeAnnotation( node, stdName )" )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["REMOVE"], 'description', '' )
__children["NodeMetadata"]["user"]["Type"].setValue( '0' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["Type"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["Type"], 'layout:section', 'Add Node Annotate' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["Type"], 'layout:index', 6 )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["Type"], 'description', '' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["Type"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["Type"], 'preset:check01', '0' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["Type"], 'preset:check02', '1' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["Type"], 'preset:check03', '2' )
Gaffer.Metadata.registerValue( __children["NodeMetadata"]["user"]["Type"], 'preset:check04', '3' )
__children["NodeMetadata"]["__uiPosition"].setValue( imath.V2f( -16.9247379, 3.77020216 ) )


del __children

