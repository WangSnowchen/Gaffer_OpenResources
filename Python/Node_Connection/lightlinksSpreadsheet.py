###

###
import Gaffer
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["lightlinks_Spreadsheet"] = Gaffer.Box( "lightlinks_Spreadsheet" )
parent.addChild( __children["lightlinks_Spreadsheet"] )
__children["lightlinks_Spreadsheet"].addChild( GafferScene.CustomAttributes( "CustomAttributes" ) )
__children["lightlinks_Spreadsheet"]["CustomAttributes"]["attributes"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["lightlinks_Spreadsheet"]["CustomAttributes"]["attributes"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member2", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["lightlinks_Spreadsheet"]["CustomAttributes"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["lightlinks_Spreadsheet"].addChild( GafferScene.PathFilter( "PathFilter" ) )
__children["lightlinks_Spreadsheet"]["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["lightlinks_Spreadsheet"].addChild( Gaffer.Spreadsheet( "Spreadsheet" ) )
__children["lightlinks_Spreadsheet"]["Spreadsheet"]["rows"].addColumn( Gaffer.BoolPlug( "linkedLightsEnabled", defaultValue = False, ) )
__children["lightlinks_Spreadsheet"]["Spreadsheet"]["rows"].addColumn( Gaffer.StringPlug( "linkedLightsValue", defaultValue = '', ) )
__children["lightlinks_Spreadsheet"]["Spreadsheet"]["rows"].addColumn( Gaffer.BoolPlug( "linkedLightsEnabled1", defaultValue = False, ) )
__children["lightlinks_Spreadsheet"]["Spreadsheet"]["rows"].addColumn( Gaffer.StringVectorDataPlug( "StringVectorDataPlug", defaultValue = IECore.StringVectorData( [  ] ), ) )
__children["lightlinks_Spreadsheet"]["Spreadsheet"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["lightlinks_Spreadsheet"].addChild( Gaffer.Node( "Node" ) )
__children["lightlinks_Spreadsheet"]["Node"]["user"].addChild( Gaffer.StringVectorDataPlug( "StringVectorDataPlug", defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["lightlinks_Spreadsheet"]["Node"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["lightlinks_Spreadsheet"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["lightlinks_Spreadsheet"].addChild( Gaffer.BoxIn( "BoxIn" ) )
__children["lightlinks_Spreadsheet"]["BoxIn"].setup( GafferScene.ScenePlug( "out", ) )
__children["lightlinks_Spreadsheet"]["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["lightlinks_Spreadsheet"].addChild( GafferScene.ScenePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["lightlinks_Spreadsheet"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["lightlinks_Spreadsheet"]["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["lightlinks_Spreadsheet"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["lightlinks_Spreadsheet"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["lightlinks_Spreadsheet"].addChild( Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["lightlinks_Spreadsheet"].addChild( Gaffer.Spreadsheet.RowsPlug( "rows", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["lightlinks_Spreadsheet"]["rows"].addColumn( Gaffer.BoolPlug( "linkedLightsEnabled", defaultValue = False, ) )
__children["lightlinks_Spreadsheet"]["rows"].addColumn( Gaffer.StringPlug( "linkedLightsValue", defaultValue = '', ) )
__children["lightlinks_Spreadsheet"]["rows"].addColumn( Gaffer.BoolPlug( "linkedLightsEnabled1", defaultValue = False, ) )
__children["lightlinks_Spreadsheet"]["rows"].addColumn( Gaffer.StringVectorDataPlug( "StringVectorDataPlug", defaultValue = IECore.StringVectorData( [  ] ), ) )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"], 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"], 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"], 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"], 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"], 'documentation:url', '' )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"], 'description', 'A container for "subgraphs" - node networks which exist inside the\nBox and can be exposed by promoting selected internal plugs onto the\noutside of the Box.\n\nBoxes can be used as an organisational tool for simplifying large\ngraphs by collapsing them into sections which perform distinct tasks.\nThey are also used for authoring files to be used with the Reference\nnode.' )
__children["lightlinks_Spreadsheet"]["CustomAttributes"]["in"].setInput( __children["lightlinks_Spreadsheet"]["BoxIn"]["out"] )
__children["lightlinks_Spreadsheet"]["CustomAttributes"]["filter"].setInput( __children["lightlinks_Spreadsheet"]["PathFilter"]["out"] )
__children["lightlinks_Spreadsheet"]["CustomAttributes"]["attributes"]["member1"]["name"].setValue( 'linkedLights' )
__children["lightlinks_Spreadsheet"]["CustomAttributes"]["attributes"]["member2"]["name"].setValue( 'linkedLights' )
__children["lightlinks_Spreadsheet"]["CustomAttributes"]["attributes"]["member1"]["value"].setInput( __children["lightlinks_Spreadsheet"]["Spreadsheet"]["out"]["linkedLightsValue"] )
__children["lightlinks_Spreadsheet"]["CustomAttributes"]["attributes"]["member1"]["enabled"].setInput( __children["lightlinks_Spreadsheet"]["Spreadsheet"]["out"]["linkedLightsEnabled"] )
__children["lightlinks_Spreadsheet"]["CustomAttributes"]["attributes"]["member2"]["value"].setInput( __children["lightlinks_Spreadsheet"]["Node"]["user"]["StringVectorDataPlug"] )
__children["lightlinks_Spreadsheet"]["CustomAttributes"]["attributes"]["member2"]["enabled"].setInput( __children["lightlinks_Spreadsheet"]["Spreadsheet"]["out"]["linkedLightsEnabled1"] )
__children["lightlinks_Spreadsheet"]["CustomAttributes"]["__uiPosition"].setValue( imath.V2f( -108.186493, -28.6953335 ) )
__children["lightlinks_Spreadsheet"]["PathFilter"]["paths"].setInput( __children["lightlinks_Spreadsheet"]["Spreadsheet"]["enabledRowNames"] )
__children["lightlinks_Spreadsheet"]["PathFilter"]["__uiPosition"].setValue( imath.V2f( -91.7861023, -21.6032963 ) )
__children["lightlinks_Spreadsheet"]["Spreadsheet"]["selector"].setValue( '${scene:path}' )
__children["lightlinks_Spreadsheet"]["Spreadsheet"]["rows"].setInput( __children["lightlinks_Spreadsheet"]["rows"] )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["Spreadsheet"]["rows"], 'spreadsheet:section:Only accept specified light sources:index', 0 )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["Spreadsheet"]["rows"], 'spreadsheet:section:Remove specified light source:index', 1 )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["Spreadsheet"]["rows"][0]["cells"]["linkedLightsEnabled"], 'spreadsheet:section', 'Only accept specified light sources' )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["Spreadsheet"]["rows"][0]["cells"]["linkedLightsEnabled"]["value"], 'ui:scene:acceptsSetName:promotable', False )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["Spreadsheet"]["rows"][0]["cells"]["linkedLightsEnabled"]["value"], 'ui:scene:acceptsSetNames:promotable', False )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["Spreadsheet"]["rows"][0]["cells"]["linkedLightsEnabled"]["value"], 'ui:scene:acceptsSetExpression:promotable', False )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["Spreadsheet"]["rows"][0]["cells"]["linkedLightsValue"], 'spreadsheet:section', 'Only accept specified light sources' )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["Spreadsheet"]["rows"][0]["cells"]["linkedLightsValue"]["value"], 'ui:scene:acceptsSetName:promotable', False )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["Spreadsheet"]["rows"][0]["cells"]["linkedLightsValue"]["value"], 'ui:scene:acceptsSetNames:promotable', False )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["Spreadsheet"]["rows"][0]["cells"]["linkedLightsValue"]["value"], 'ui:scene:acceptsSetExpression:promotable', False )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["Spreadsheet"]["rows"][0]["cells"]["linkedLightsEnabled1"], 'spreadsheet:section', 'Remove specified light source' )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["Spreadsheet"]["rows"][0]["cells"]["linkedLightsEnabled1"]["value"], 'ui:scene:acceptsSetName:promotable', False )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["Spreadsheet"]["rows"][0]["cells"]["linkedLightsEnabled1"]["value"], 'ui:scene:acceptsSetNames:promotable', False )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["Spreadsheet"]["rows"][0]["cells"]["linkedLightsEnabled1"]["value"], 'ui:scene:acceptsSetExpression:promotable', False )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["Spreadsheet"]["rows"][0]["cells"]["StringVectorDataPlug"], 'spreadsheet:section', 'Remove specified light source' )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["Spreadsheet"]["rows"][0]["cells"]["StringVectorDataPlug"]["value"], 'ui:scene:acceptsSetName:promotable', False )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["Spreadsheet"]["rows"][0]["cells"]["StringVectorDataPlug"]["value"], 'ui:scene:acceptsSetNames:promotable', False )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["Spreadsheet"]["rows"][0]["cells"]["StringVectorDataPlug"]["value"], 'ui:scene:acceptsSetExpression:promotable', False )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["Spreadsheet"]["rows"][0]["cells"]["StringVectorDataPlug"]["value"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["Spreadsheet"]["rows"][0]["cells"]["StringVectorDataPlug"]["value"], 'nodule:type', '' )
__children["lightlinks_Spreadsheet"]["Spreadsheet"]["__uiPosition"].setValue( imath.V2f( -126.461693, -21.8512096 ) )
__children["lightlinks_Spreadsheet"]["Node"]["user"]["StringVectorDataPlug"].setInput( __children["lightlinks_Spreadsheet"]["Spreadsheet"]["out"]["StringVectorDataPlug"] )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["Node"]["user"]["StringVectorDataPlug"], 'nodule:type', '' )
__children["lightlinks_Spreadsheet"]["Node"]["__uiPosition"].setValue( imath.V2f( -126.1922, -28.3376694 ) )
__children["lightlinks_Spreadsheet"]["__uiPosition"].setValue( imath.V2f( -110.753998, -22.7109203 ) )
__children["lightlinks_Spreadsheet"]["BoxIn"]["__in"].setInput( __children["lightlinks_Spreadsheet"]["in"] )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["BoxIn"]["__in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["BoxIn"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["BoxIn"]["__in"], 'description', 'The input scene' )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["BoxIn"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["BoxIn"]["__in"], 'noduleLayout:spacing', 2.0 )
__children["lightlinks_Spreadsheet"]["BoxIn"]["__uiPosition"].setValue( imath.V2f( -108.187187, -20.3633022 ) )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["in"], 'description', 'The input scene' )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["in"], 'noduleLayout:spacing', 2.0 )
__children["lightlinks_Spreadsheet"]["BoxOut"]["in"].setInput( __children["lightlinks_Spreadsheet"]["CustomAttributes"]["out"] )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["BoxOut"]["__out"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["lightlinks_Spreadsheet"]["BoxOut"]["passThrough"].setInput( __children["lightlinks_Spreadsheet"]["BoxIn"]["out"] )
__children["lightlinks_Spreadsheet"]["BoxOut"]["enabled"].setInput( __children["lightlinks_Spreadsheet"]["enabled"] )
__children["lightlinks_Spreadsheet"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( -106.687187, -37.0273666 ) )
__children["lightlinks_Spreadsheet"]["out"].setInput( __children["lightlinks_Spreadsheet"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["out"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["lightlinks_Spreadsheet"]["rows"][0]["cells"]["StringVectorDataPlug"]["value"].setValue( IECore.StringVectorData( [ '* - ' ] ) )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["rows"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["rows"], 'description', 'Holds a child RowPlug for each row in the spreadsheet.' )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["rows"], 'spreadsheet:section:Only accept specified light sources:index', 0 )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["rows"], 'spreadsheet:section:Remove specified light source:index', 1 )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["rows"][0], 'description', 'The default row. This provides output values when no other\nrow matches the `selector`.' )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["rows"][0]["name"], 'description', "The name of the row. This is matched against the `selector`\nto determine which row is chosen to be passed to the output.\nMay contain multiple space separated names and any of Gaffer's\nstandard wildcards." )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["rows"][0]["enabled"], 'description', 'Enables or disables this row. Disabled rows are ignored.' )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["rows"][0]["cells"], 'description', 'Contains a child CellPlug for each column in the spreadsheet.' )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["rows"][0]["cells"]["linkedLightsEnabled"], 'spreadsheet:section', 'Only accept specified light sources' )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["rows"][0]["cells"]["linkedLightsValue"], 'spreadsheet:section', 'Only accept specified light sources' )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["rows"][0]["cells"]["linkedLightsEnabled1"], 'spreadsheet:section', 'Remove specified light source' )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["rows"][0]["cells"]["StringVectorDataPlug"], 'spreadsheet:section', 'Remove specified light source' )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["rows"][0]["cells"]["StringVectorDataPlug"]["value"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["lightlinks_Spreadsheet"]["rows"][0]["cells"]["StringVectorDataPlug"]["value"], 'nodule:type', '' )


del __children

