import Gaffer
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["Circle_Curve"] = Gaffer.Box( "Circle_Curve" )
parent.addChild( __children["Circle_Curve"] )
__children["Circle_Curve"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["Circle_Curve"]["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["Circle_Curve"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Circle_Curve"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Circle_Curve"].addChild( Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Circle_Curve"].addChild( GafferScene.Sphere( "Sphere1" ) )
__children["Circle_Curve"]["Sphere1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Circle_Curve"].addChild( GafferScene.Transform( "Transform" ) )
__children["Circle_Curve"]["Transform"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Circle_Curve"].addChild( GafferScene.PathFilter( "PathFilter2" ) )
__children["Circle_Curve"]["PathFilter2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Circle_Curve"].addChild( Gaffer.Animation( "Animation" ) )
__children["Circle_Curve"]["Animation"]["curves"].addChild( Gaffer.Animation.CurvePlug( "curve0", flags = ( Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) & ~Gaffer.Plug.Flags.AcceptsInputs, ) )
__children["Circle_Curve"]["Animation"]["curves"]["curve0"].addKey( Gaffer.Animation.Key( 0.0416666679, 0, Gaffer.Animation.Interpolation.Bezier, 0, 0.333333333, 0, 0.333333333, Gaffer.Animation.TieMode.Scale ) )
__children["Circle_Curve"]["Animation"]["curves"]["curve0"].addKey( Gaffer.Animation.Key( 0.458333343, 360, Gaffer.Animation.Interpolation.Bezier, 0, 0.333333333, 0, 0.333333333, Gaffer.Animation.TieMode.Scale ) )
__children["Circle_Curve"]["Animation"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Circle_Curve"].addChild( GafferScene.MotionPath( "MotionPath" ) )
__children["Circle_Curve"]["MotionPath"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Circle_Curve"].addChild( GafferScene.DeletePrimitiveVariables( "DeletePrimitiveVariables" ) )
__children["Circle_Curve"]["DeletePrimitiveVariables"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Circle_Curve"].addChild( GafferScene.Transform( "Transform1" ) )
__children["Circle_Curve"]["Transform1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Circle_Curve"].addChild( GafferScene.FreezeTransform( "FreezeTransform" ) )
__children["Circle_Curve"]["FreezeTransform"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Circle_Curve"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
Gaffer.Metadata.registerValue( __children["Circle_Curve"], 'documentation:url', '' )
Gaffer.Metadata.registerValue( __children["Circle_Curve"], 'description', 'A container for "subgraphs" - node networks which exist inside the\nBox and can be exposed by promoting selected internal plugs onto the\noutside of the Box.\n\nBoxes can be used as an organisational tool for simplifying large\ngraphs by collapsing them into sections which perform distinct tasks.\nThey are also used for authoring files to be used with the Reference\nnode.' )
Gaffer.Metadata.registerValue( __children["Circle_Curve"], 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( __children["Circle_Curve"], 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( __children["Circle_Curve"], 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( __children["Circle_Curve"], 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( __children["Circle_Curve"], 'icon', 'boxNode.png' )
__children["Circle_Curve"]["BoxOut"]["in"].setInput( __children["Circle_Curve"]["FreezeTransform"]["out"] )
Gaffer.Metadata.registerValue( __children["Circle_Curve"]["BoxOut"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["Circle_Curve"]["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
__children["Circle_Curve"]["BoxOut"]["enabled"].setInput( __children["Circle_Curve"]["enabled"] )
__children["Circle_Curve"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( 26.6672935, -7.54684258 ) )
__children["Circle_Curve"]["out"].setInput( __children["Circle_Curve"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["Circle_Curve"]["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Circle_Curve"]["out"], 'noduleLayout:section', 'bottom' )
__children["Circle_Curve"]["Sphere1"]["name"].setValue( 'Circle' )
__children["Circle_Curve"]["Sphere1"]["transform"]["translate"].setValue( imath.V3f( 2, 0, 2 ) )
__children["Circle_Curve"]["Sphere1"]["__uiPosition"].setValue( imath.V2f( 25.1672935, 43.7414551 ) )
__children["Circle_Curve"]["Transform"]["in"].setInput( __children["Circle_Curve"]["Sphere1"]["out"] )
__children["Circle_Curve"]["Transform"]["filter"].setInput( __children["Circle_Curve"]["PathFilter2"]["out"] )
__children["Circle_Curve"]["Transform"]["space"].setValue( 2 )
__children["Circle_Curve"]["Transform"]["transform"]["rotate"]["y"].setInput( __children["Circle_Curve"]["Animation"]["curves"]["curve0"]["out"] )
__children["Circle_Curve"]["Transform"]["__uiPosition"].setValue( imath.V2f( 25.1672935, 35.5773926 ) )
__children["Circle_Curve"]["PathFilter2"]["paths"].setValue( IECore.StringVectorData( [ '/Circle' ] ) )
__children["Circle_Curve"]["PathFilter2"]["__uiPosition"].setValue( imath.V2f( 46.4672813, 25.0594158 ) )
__children["Circle_Curve"]["Animation"]["__uiPosition"].setValue( imath.V2f( 14.6664047, 35.5771637 ) )
__children["Circle_Curve"]["MotionPath"]["in"].setInput( __children["Circle_Curve"]["Transform"]["out"] )
__children["Circle_Curve"]["MotionPath"]["filter"].setInput( __children["Circle_Curve"]["PathFilter2"]["out"] )
__children["Circle_Curve"]["MotionPath"]["start"]["mode"].setValue( 1 )
__children["Circle_Curve"]["MotionPath"]["start"]["frame"].setValue( 1.0 )
__children["Circle_Curve"]["MotionPath"]["end"]["mode"].setValue( 1 )
__children["Circle_Curve"]["MotionPath"]["end"]["frame"].setValue( 11.0 )
__children["Circle_Curve"]["MotionPath"]["samplingMode"].setValue( 1 )
__children["Circle_Curve"]["MotionPath"]["samples"].setValue( 50 )
__children["Circle_Curve"]["MotionPath"]["adjustBounds"].setValue( False )
__children["Circle_Curve"]["MotionPath"]["__uiPosition"].setValue( imath.V2f( 25.1672935, 27.4133224 ) )
__children["Circle_Curve"]["DeletePrimitiveVariables"]["in"].setInput( __children["Circle_Curve"]["Transform1"]["out"] )
__children["Circle_Curve"]["DeletePrimitiveVariables"]["filter"].setInput( __children["Circle_Curve"]["PathFilter2"]["out"] )
__children["Circle_Curve"]["DeletePrimitiveVariables"]["names"].setValue( 'P' )
__children["Circle_Curve"]["DeletePrimitiveVariables"]["invertNames"].setValue( True )
__children["Circle_Curve"]["DeletePrimitiveVariables"]["__uiPosition"].setValue( imath.V2f( 25.1672935, 11.0851974 ) )
__children["Circle_Curve"]["Transform1"]["in"].setInput( __children["Circle_Curve"]["MotionPath"]["out"] )
__children["Circle_Curve"]["Transform1"]["filter"].setInput( __children["Circle_Curve"]["PathFilter2"]["out"] )
__children["Circle_Curve"]["Transform1"]["__uiPosition"].setValue( imath.V2f( 25.1672935, 19.2492599 ) )
__children["Circle_Curve"]["FreezeTransform"]["in"].setInput( __children["Circle_Curve"]["DeletePrimitiveVariables"]["out"] )
__children["Circle_Curve"]["FreezeTransform"]["filter"].setInput( __children["Circle_Curve"]["PathFilter2"]["out"] )
__children["Circle_Curve"]["FreezeTransform"]["__uiPosition"].setValue( imath.V2f( 25.1672935, 2.92113495 ) )
__children["Circle_Curve"]["__uiPosition"].setValue( imath.V2f( -3.96031594, -83.723381 ) )


del __children

