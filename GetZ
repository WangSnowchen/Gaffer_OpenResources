import Gaffer
import GafferImage
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["GetZ"] = Gaffer.Box( "GetZ" )
parent.addChild( __children["GetZ"] )
__children["GetZ"].addChild( GafferImage.CopyChannels( "CopyChannels" ) )
__children["GetZ"]["CopyChannels"]["in"].addChild( GafferImage.ImagePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"]["CopyChannels"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"].addChild( GafferImage.Shuffle( "Shuffle" ) )
__children["GetZ"]["Shuffle"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"]["Shuffle"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"]["Shuffle"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"]["Shuffle"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"]["Shuffle"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"].addChild( GafferImage.Merge( "Merge" ) )
__children["GetZ"]["Merge"]["in"].addChild( GafferImage.ImagePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"]["Merge"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"].addChild( GafferImage.Grade( "Grade" ) )
__children["GetZ"]["Grade"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"].addChild( GafferImage.Constant( "Constant" ) )
__children["GetZ"]["Constant"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"].addChild( GafferImage.CopyChannels( "CopyChannels1" ) )
__children["GetZ"]["CopyChannels1"]["in"].addChild( GafferImage.ImagePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"]["CopyChannels1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"].addChild( GafferImage.Shuffle( "Shuffle1" ) )
__children["GetZ"]["Shuffle1"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"]["Shuffle1"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"]["Shuffle1"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"]["Shuffle1"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"]["Shuffle1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"].addChild( GafferImage.DeleteChannels( "DeleteChannels" ) )
__children["GetZ"]["DeleteChannels"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"].addChild( Gaffer.Dot( "Dot" ) )
__children["GetZ"]["Dot"].setup( GafferImage.ImagePlug( "in", ) )
__children["GetZ"]["Dot"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"].addChild( Gaffer.Dot( "Dot1" ) )
__children["GetZ"]["Dot1"].setup( GafferImage.ImagePlug( "in", ) )
__children["GetZ"]["Dot1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"].addChild( Gaffer.Dot( "Dot2" ) )
__children["GetZ"]["Dot2"].setup( GafferImage.ImagePlug( "in", ) )
__children["GetZ"]["Dot2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"].addChild( GafferImage.ImagePlug( "RGBA", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"].addChild( GafferImage.Grade( "Grade1" ) )
__children["GetZ"]["Grade1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"].addChild( GafferImage.Premultiply( "Premultiply" ) )
__children["GetZ"]["Premultiply"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"].addChild( Gaffer.BoxIn( "BoxIn1" ) )
__children["GetZ"]["BoxIn1"].setup( GafferImage.ImagePlug( "out", ) )
__children["GetZ"]["BoxIn1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"].addChild( Gaffer.Color4fPlug( "gain", defaultValue = imath.Color4f( 1, 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"].addChild( Gaffer.Color4fPlug( "gamma", defaultValue = imath.Color4f( 1, 1, 1, 1 ), minValue = imath.Color4f( 0, 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"].addChild( Gaffer.Color4fPlug( "Two_gain", defaultValue = imath.Color4f( 1, 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"].addChild( Gaffer.Color4fPlug( "Two_gamma", defaultValue = imath.Color4f( 1, 1, 1, 1 ), minValue = imath.Color4f( 0, 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["GetZ"]["BoxOut"].setup( GafferImage.ImagePlug( "in", ) )
__children["GetZ"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"].addChild( GafferImage.ImagePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"].addChild( Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"].addChild( Gaffer.BoolPlug( "Disable_Premult", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"].addChild( Gaffer.BoxIn( "BoxIn" ) )
__children["GetZ"]["BoxIn"].setup( GafferImage.ImagePlug( "out", ) )
__children["GetZ"]["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"].addChild( GafferImage.ImagePlug( "Z", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GetZ"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
Gaffer.Metadata.registerValue( __children["GetZ"], 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( __children["GetZ"], 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( __children["GetZ"], 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( __children["GetZ"], 'noduleLayout:customGadget:addButtonRight:visible', False )
__children["GetZ"]["CopyChannels"]["in"][0].setInput( __children["GetZ"]["Dot1"]["out"] )
__children["GetZ"]["CopyChannels"]["in"][1].setInput( __children["GetZ"]["Dot2"]["out"] )
__children["GetZ"]["CopyChannels"]["channels"].setValue( '[RGBA] Y' )
__children["GetZ"]["CopyChannels"]["__uiPosition"].setValue( imath.V2f( 10.6000023, -3.34999943 ) )
__children["GetZ"]["Shuffle"]["in"].setInput( __children["GetZ"]["CopyChannels"]["out"] )
__children["GetZ"]["Shuffle"]["channels"]["channel"]["out"].setValue( 'R' )
__children["GetZ"]["Shuffle"]["channels"]["channel"]["in"].setValue( 'Y' )
__children["GetZ"]["Shuffle"]["channels"]["channel1"]["out"].setValue( 'G' )
__children["GetZ"]["Shuffle"]["channels"]["channel1"]["in"].setValue( 'Y' )
__children["GetZ"]["Shuffle"]["channels"]["channel2"]["out"].setValue( 'B' )
__children["GetZ"]["Shuffle"]["channels"]["channel2"]["in"].setValue( 'Y' )
__children["GetZ"]["Shuffle"]["channels"]["channel3"]["out"].setValue( 'A' )
__children["GetZ"]["Shuffle"]["channels"]["channel3"]["in"].setValue( 'Y' )
__children["GetZ"]["Shuffle"]["__uiPosition"].setValue( imath.V2f( 10.6000023, -11.5140619 ) )
__children["GetZ"]["Merge"]["in"][0].setInput( __children["GetZ"]["Constant"]["out"] )
__children["GetZ"]["Merge"]["in"][1].setInput( __children["GetZ"]["Grade"]["out"] )
__children["GetZ"]["Merge"]["operation"].setValue( 10 )
__children["GetZ"]["Merge"]["__uiPosition"].setValue( imath.V2f( 10.6000023, -29.8073177 ) )
__children["GetZ"]["Grade"]["in"].setInput( __children["GetZ"]["Shuffle"]["out"] )
__children["GetZ"]["Grade"]["gain"].setInput( __children["GetZ"]["gain"] )
__children["GetZ"]["Grade"]["gamma"].setInput( __children["GetZ"]["gamma"] )
__children["GetZ"]["Grade"]["whiteClamp"].setValue( True )
__children["GetZ"]["Grade"]["__uiPosition"].setValue( imath.V2f( 10.6000023, -19.6781254 ) )
Gaffer.Metadata.registerValue( __children["GetZ"]["Constant"]["format"], 'formatPlugValueWidget:mode', 'standard' )
__children["GetZ"]["Constant"]["color"].setValue( imath.Color4f( 1, 1, 1, 1 ) )
__children["GetZ"]["Constant"]["__uiPosition"].setValue( imath.V2f( -3.31086421, -21.6432552 ) )
__children["GetZ"]["CopyChannels1"]["in"][0].setInput( __children["GetZ"]["Shuffle1"]["out"] )
__children["GetZ"]["CopyChannels1"]["in"][1].setInput( __children["GetZ"]["DeleteChannels"]["out"] )
__children["GetZ"]["CopyChannels1"]["channels"].setValue( '[RGBA]' )
__children["GetZ"]["CopyChannels1"]["__uiPosition"].setValue( imath.V2f( 10.6000023, -44.1284637 ) )
__children["GetZ"]["Shuffle1"]["in"].setInput( __children["GetZ"]["Dot"]["out"] )
__children["GetZ"]["Shuffle1"]["channels"]["channel"]["out"].setValue( 'R' )
__children["GetZ"]["Shuffle1"]["channels"]["channel"]["in"].setValue( '__black' )
__children["GetZ"]["Shuffle1"]["channels"]["channel1"]["out"].setValue( 'G' )
__children["GetZ"]["Shuffle1"]["channels"]["channel1"]["in"].setValue( '__black' )
__children["GetZ"]["Shuffle1"]["channels"]["channel2"]["out"].setValue( 'B' )
__children["GetZ"]["Shuffle1"]["channels"]["channel2"]["in"].setValue( '__black' )
__children["GetZ"]["Shuffle1"]["channels"]["channel3"]["out"].setValue( 'A' )
__children["GetZ"]["Shuffle1"]["channels"]["channel3"]["in"].setValue( 'A' )
__children["GetZ"]["Shuffle1"]["__uiPosition"].setValue( imath.V2f( -13.0861006, -35.9644012 ) )
__children["GetZ"]["DeleteChannels"]["in"].setInput( __children["GetZ"]["Merge"]["out"] )
__children["GetZ"]["DeleteChannels"]["mode"].setValue( 1 )
__children["GetZ"]["DeleteChannels"]["channels"].setValue( '[RGB]' )
__children["GetZ"]["DeleteChannels"]["__uiPosition"].setValue( imath.V2f( 10.6000023, -35.4713821 ) )
__children["GetZ"]["Dot"]["in"].setInput( __children["GetZ"]["Dot2"]["out"] )
__children["GetZ"]["Dot"]["__uiPosition"].setValue( imath.V2f( -13.0861006, 3.85240269 ) )
__children["GetZ"]["Dot1"]["in"].setInput( __children["GetZ"]["BoxIn"]["out"] )
__children["GetZ"]["Dot1"]["__uiPosition"].setValue( imath.V2f( -3.75701666, 3.98203182 ) )
__children["GetZ"]["Dot2"]["in"].setInput( __children["GetZ"]["BoxIn1"]["out"] )
__children["GetZ"]["Dot2"]["__uiPosition"].setValue( imath.V2f( 10.6000023, 10.3524046 ) )
Gaffer.Metadata.registerValue( __children["GetZ"]["RGBA"], 'plugValueWidget:type', '' )
__children["GetZ"]["Grade1"]["in"].setInput( __children["GetZ"]["CopyChannels1"]["out"] )
__children["GetZ"]["Grade1"]["gain"].setInput( __children["GetZ"]["Two_gain"] )
__children["GetZ"]["Grade1"]["gamma"].setInput( __children["GetZ"]["Two_gamma"] )
__children["GetZ"]["Grade1"]["whiteClamp"].setValue( True )
__children["GetZ"]["Grade1"]["__uiPosition"].setValue( imath.V2f( 10.6000023, -52.2925262 ) )
__children["GetZ"]["Premultiply"]["enabled"].setInput( __children["GetZ"]["Disable_Premult"] )
__children["GetZ"]["Premultiply"]["in"].setInput( __children["GetZ"]["Grade1"]["out"] )
__children["GetZ"]["Premultiply"]["__uiPosition"].setValue( imath.V2f( 10.6000023, -60.4565887 ) )
__children["GetZ"]["BoxIn1"]["name"].setValue( 'RGBA' )
__children["GetZ"]["BoxIn1"]["__in"].setInput( __children["GetZ"]["RGBA"] )
Gaffer.Metadata.registerValue( __children["GetZ"]["BoxIn1"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["GetZ"]["BoxIn1"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["GetZ"]["BoxIn1"]["__in"], 'plugValueWidget:type', '' )
__children["GetZ"]["BoxIn1"]["__uiPosition"].setValue( imath.V2f( 10.5993948, 17.8524055 ) )
Gaffer.Metadata.registerValue( __children["GetZ"]["gain"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["GetZ"]["gain"], 'description', 'The colour that input pixels at the whitePoint\nbecome in the output image. This can be thought\nof as defining the lighter values of the image.' )
Gaffer.Metadata.registerValue( __children["GetZ"]["gain"]["r"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["GetZ"]["gain"]["g"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["GetZ"]["gain"]["b"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["GetZ"]["gain"]["a"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["GetZ"]["gamma"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["GetZ"]["gamma"], 'description', 'A gamma correction applied after all the remapping\ndefined above.' )
Gaffer.Metadata.registerValue( __children["GetZ"]["gamma"]["r"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["GetZ"]["gamma"]["g"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["GetZ"]["gamma"]["b"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["GetZ"]["gamma"]["a"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["GetZ"]["Two_gain"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["GetZ"]["Two_gain"], 'description', 'The colour that input pixels at the whitePoint\nbecome in the output image. This can be thought\nof as defining the lighter values of the image.' )
Gaffer.Metadata.registerValue( __children["GetZ"]["Two_gain"]["r"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["GetZ"]["Two_gain"]["g"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["GetZ"]["Two_gain"]["b"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["GetZ"]["Two_gain"]["a"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["GetZ"]["Two_gamma"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["GetZ"]["Two_gamma"], 'description', 'A gamma correction applied after all the remapping\ndefined above.' )
Gaffer.Metadata.registerValue( __children["GetZ"]["Two_gamma"]["r"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["GetZ"]["Two_gamma"]["g"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["GetZ"]["Two_gamma"]["b"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["GetZ"]["Two_gamma"]["a"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
__children["GetZ"]["BoxOut"]["in"].setInput( __children["GetZ"]["Premultiply"]["out"] )
Gaffer.Metadata.registerValue( __children["GetZ"]["BoxOut"]["__out"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["GetZ"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["GetZ"]["BoxOut"]["passThrough"].setInput( __children["GetZ"]["BoxIn"]["out"] )
__children["GetZ"]["BoxOut"]["enabled"].setInput( __children["GetZ"]["enabled"] )
__children["GetZ"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( 12.1000023, -70.6980896 ) )
__children["GetZ"]["out"].setInput( __children["GetZ"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["GetZ"]["out"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["GetZ"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["GetZ"]["Disable_Premult"], 'description', 'Turns the node on and off.' )
Gaffer.Metadata.registerValue( __children["GetZ"]["Disable_Premult"], 'nodule:type', '' )
__children["GetZ"]["BoxIn"]["name"].setValue( 'Z' )
__children["GetZ"]["BoxIn"]["__in"].setInput( __children["GetZ"]["Z"] )
Gaffer.Metadata.registerValue( __children["GetZ"]["BoxIn"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["GetZ"]["BoxIn"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["GetZ"]["BoxIn"]["__in"], 'plugValueWidget:type', '' )
__children["GetZ"]["BoxIn"]["__uiPosition"].setValue( imath.V2f( -3.75701666, 11.4820328 ) )
Gaffer.Metadata.registerValue( __children["GetZ"]["Z"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["GetZ"]["Z"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["GetZ"]["Z"], 'plugValueWidget:type', '' )
__children["GetZ"]["__uiPosition"].setValue( imath.V2f( -13.1394272, -31.7644424 ) )


del __children

